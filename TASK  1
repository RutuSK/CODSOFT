#TASK 1 :TITANIC SURVIVAL PREDICTION

#Author : Rutuja Khade
#Batch : December
#Domain : Data Science
#Aim : to build a model that predicts whether a passenger on the Titanic survived or not.

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
df = pd.read_csv("Titanic-Dataset.csv")
df.head()
df.shape
df.info()
df.isna().sum()
df.drop('Cabin', axis=1, inplace=True)
df.columns
df.isna().sum()
df['Age'].median()
df['Age'].fillna(df['Age'].median(),inplace=True)
df.isna().sum()
df["Embarked"].mode()[0]
df["Embarked"].fillna(df["Embarked"].mode()[0],inplace=True)
df.isna().sum()
df['Survived'].value_counts().plot(kind='bar')
df.columns
import seaborn as sns
sns.countplot(data=df,x='Pclass',hue='Survived')
#Descriptive Analysis
sns.countplot(data=df,x='Sex',hue='Survived')
df.describe()
from sklearn.preprocessing import LabelEncoder
labelencoder = LabelEncoder()
df['Sex'] = labelencoder.fit_transform(df['Sex'])
df.head()
df['Sex'] , df['Survived']
sns.countplot(x=df['Sex'],hue=df['Survived'])
#Model Training
x = df[['Pclass', 'Sex']]
y = df['Survived']
from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x,y, test_size=0.2, random_state=101)
from sklearn.linear_model import LogisticRegression

model=LogisticRegression(random_state=0)
model.fit(x_train,y_train)
#Model Prediction
pred = print(model.predict(x_test))
print(y_test)
import warnings
warnings.filterwarnings("ignore")
res = model.predict([[2,0]])
if (res == 0):
    print("Sorry! Not Survived")
else:
    print("Survived")

